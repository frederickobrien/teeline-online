---
title: Special outlines
description: When Teeline shorthand needs its own shorthand, look no further than special outlines
slug: special-outlines
order: 7
---

<script>
    import OutlineCardsSideBySide from '$lib/cards/OutlineCardsSideBySide.svelte'
    import { findOrCreateOutlineObject } from '../scripts/build-outline-objects.ts'
    import { hydrateOutlineData } from '../scripts/hydrate-outline-data.ts'
    import lettersAndGroupings from '../data/outlines.json'
    import specials from '../data/special-outlines.json'
    import SyllabusLink from '$lib/SyllabusLink.svelte'

    const hydratedOutlineData = hydrateOutlineData(lettersAndGroupings, specials);

	const dOutline = findOrCreateOutlineObject('ladies and gentlemen', hydratedOutlineData);
	const tOutline = findOrCreateOutlineObject('on the other hand', hydratedOutlineData);

    const governmentOutline = findOrCreateOutlineObject('government', hydratedOutlineData);
    const satisfactoryOutline = findOrCreateOutlineObject('satisfactory', hydratedOutlineData);
</script> 

There are words and turns of phrases so common that it makes sense to have succinct versions of them, even by the standards of Teeline. These abbreviated - or sometimes straight up symbolic - words are called **special outlines**.

Here are a few examples:

<OutlineCardsSideBySide leftOutline={dOutline} rightOutline={tOutline} />

<OutlineCardsSideBySide leftOutline={governmentOutline} rightOutline={satisfactoryOutline} />

Imagine how much longer it would take to write those out fully, even in Teeline. When you're desperately scrawling down a statement those fractions of a second will be invaluable.

There is no real trick to special outlines. Of course it doesn't hurt to understand _why_ it represents what it represents, but the main thing is that they are remembered. It's with special outlines that it's especially important to [revise](/revise). When you hear 'ladies and gentlemen' the special outline should come instinctively.

<SyllabusLink sectionKey={slug} />