---
title: Connecting letters
description: How and why to join letters together in Teeline shorthand
---

<script>
    import OutlineCardAnimated from '$lib/cards/OutlineCardAnimated.svelte'
    import WordDisemvoweler from '$lib/disemvoweler/wordDisemvoweler.svelte'
    import WordConverter from '$lib/wordConverter.svelte'
    import WordToOutline from '$lib/wordToOutline.svelte'

    import { outlines } from '../data/outlines/outlines.ts'
	import { findMatchingSpecialOutline } from '../scripts/helpers.ts'

	const conferenceOutline = findMatchingSpecialOutline('conference', outlines);
</script> 

The full process going on in the shorthand writer's brain is as follows:

- Strip words of superfluous letters (i.e., [disemvowelment](/learn/disemvowelment))
- Write what remains using [Teeline's alphabet](/learn/the-alphabet) and [special outlines](/learn/special-outlines)

Part of Teeline's beauty is the way letters flow into each other. Cast off your longhand experiences of connecting letters together the same way every time. In the world of shorthand things are much more fluid.

<WordConverter />

The efficiency of shorthand is in the way it connects letters together. Let's look at a few examples.

<WordToOutline word={'rose'} {outlines} />
<WordToOutline word={'fort'} {outlines} />
<WordToOutline word={'sage'} {outlines} />

Let's take the special outline of 'conference' as an example.

<OutlineCardAnimated outlineObject={conferenceOutline} --width={"50%"} />

Look at that. One fluid motion of the pen. Eleven would be needed to write it out in longhand. Even the disemvoweled version takes up seven.

<WordDisemvoweler word="conference" />

This is an extreme example given 'conference' has an extra succinct special outline of its own, but it represents a key tenet of shorthand: **the fewer pen strokes the better**.
