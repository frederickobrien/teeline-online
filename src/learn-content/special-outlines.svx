---
title: Special outlines
descriptions: When Teeline shorthand needs its own shorthand, look no further than special outlines
---

<script>
    import OutlineCardsSideBySide from '$lib/cards/OutlineCardsSideBySide.svelte'
    import outlines from '../data/outlines.json'
	import { findMatchingSpecialOutline } from '../scripts/helpers.ts'
    import SyllabusLink from '$lib/syllabusLink.svelte'

	const dOutline = findMatchingSpecialOutline('ladies and gentlemen', outlines);
	const tOutline = findMatchingSpecialOutline('on the other hand', outlines);

    const governmentOutline = findMatchingSpecialOutline('government', outlines);
    const satisfactoryOutline = findMatchingSpecialOutline('satisfactory', outlines);
</script> 

There are words and turns of phrases so common that it makes sense to have succinct versions of them, even by the standards of Teeline. These abbreviated - or sometimes straight up symbolic - words are called **special outlines**.

Here are a few examples:

<OutlineCardsSideBySide leftOutline={dOutline} rightOutline={tOutline} />

<OutlineCardsSideBySide leftOutline={governmentOutline} rightOutline={satisfactoryOutline} />

Imagine how much longer it would take to write those out fully, even in Teeline. When you're desperately scrawling down a statement those fractions of a second will be invaluable.

There is no real trick to special outlines. Of course it doesn't hurt to understand _why_ it represents what it represents, but the main thing is that they are remembered. It's with special outlines that it's especially important to [revise](/revise). When you hear 'ladies and gentlemen' the special outline should come instinctively.

<SyllabusLink sectionKey="special-outlines" />